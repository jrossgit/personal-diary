###########
# BUILDER #
###########

# pull official base image
FROM ubuntu:focal as builder

# set work directory
WORKDIR /app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install dependencies
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
    python3-pip python3-dev python3-setuptools libpq-dev postgresql-client-12 python3-venv build-essential curl

RUN pip3 install --upgrade pip

# Set python aliases for python3
RUN ln -s /usr/bin/python3 /usr/bin/python

COPY . .
# Poetry installation and setup
RUN curl -sSLO https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py \
    && python get-poetry.py --version 1.0.0 \
    && rm get-poetry.py
ENV PATH="/root/.poetry/bin:/opt/venv/bin:${PATH}"

# install dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-dev --no-interaction --no-ansi

#########
# FINAL #
#########

# pull official base image
FROM ubuntu:focal as final

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN groupadd app && useradd -g app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
COPY --from=builder /usr/local/lib/python3.8/ /usr/local/lib/python3.8
COPY --from=builder /usr/local/bin/uwsgi /usr/local/bin/
COPY --from=builder /app $APP_HOME
COPY --from=builder /lib/x86_64-linux-gnu/ /lib/x86_64-linux-gnu

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
RUN apt-get update \
    && apt-get install -y --no-install-recommends python3-setuptools \
    && ln -s /usr/bin/python3 /usr/bin/python \
    && python -m compileall -b ./ \
    && find . -type f -name '*.py' -delete \
    && find . -type f -name '_test.pyc' -delete \
    && rm poetry.lock \
    && rm pyproject.toml \
    && rm -rf test_assets/

USER app

# run entrypoint.prod.sh
EXPOSE 8000
CMD ["python", "manage.pyc", "runserver", "0.0.0.0:8000"]
